@model SRwebMVC.Models.ViewModels.RecipeCreateViewModel
@{
    ViewData["Title"] = "Create Recipe - Step 2";
    var recipeId = ViewBag.RecipeId;
}

<h2>Attach Details to the recipe: @Model.Name</h2>

<form asp-action="Attach" asp-route-id="@recipeId" method="post">
    @Html.AntiForgeryToken()

    <!-- Current Categories -->
    <div class="mb-3">
        <label><strong>Categories:</strong></label>
        <ul>
            @foreach (var cat in Model.Categories)
            {
                <li>@cat.Name</li>
            }
        </ul>
        <div class="input-group mb-2">
            <select id="NewCategoryId" name="NewCategoryId" class="form-select"></select>
            <button type="submit" name="action" value="addCategory" class="btn btn-outline-primary">Add Category</button>
        </div>
    </div>

    <!-- Current Ingredients -->
    <div class="mb-3">
        <label><strong>Ingredients:</strong></label>
        <ul>
            @foreach (var ing in Model.Ingredients)
            {
                <li>
                    @ing.Amount @ing.QuantityName @ing.IngredientName
                </li>
            }
        </ul>
        <div class="row g-2 mb-2">
            <div class="col">
                <select id="NewIngredientId" name="NewIngredientId" class="form-select"></select>
            </div>
            <div class="col">
                <input asp-for="NewIngredientAmount" class="form-control" type="number" step="0.01" min="0" placeholder="Amount" />
            </div>
            <div class="col">
                <select id="NewIngredientQuantityId" name="NewIngredientQuantityId" class="form-select"></select>
            </div>
            <div class="col-auto">
                <button type="submit" name="action" value="addIngredient" class="btn btn-outline-primary">Add Ingredient</button>
            </div>
        </div>
    </div>

    <!-- Current Steps -->
    <div class="mb-3">
        <label><strong>Instructions:</strong></label>
        <ol>
            @foreach (var step in Model.Steps.OrderBy(s => s.StepNumber))
            {
                <li>@step.Description</li>
            }
        </ol>
        <div class="input-group mb-2">
            <input asp-for="NewStepDescription" class="form-control" placeholder="Instruction" />
            <button type="submit" name="action" value="addStep" class="btn btn-outline-primary">Add Step</button>
        </div>
    </div>

    <button type="submit" name="action" value="finish" class="btn btn-primary">Finish</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

                <script>
    function initSelect2(selector, apiUrl, placeholderText) {
        $(selector).select2({
            placeholder: placeholderText,
            minimumInputLength: 2,
            ajax: {
                url: apiUrl,
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        pageNumber: 1,
                        pageSize: 10,
                        // Match query param in your controller
                        [$(selector).attr('name').toLowerCase().replace("id", "") + "name"]: params.term 
                    };
                },
                processResults: function (data) {
                    return {
                        results: data.map(function (item) {
                            return {
                                id: item.id,
                                text: item.name
                            };
                        })
                    };
                },
                cache: true
            }
        });
    }

    $(document).ready(function () {
        initSelect2("#NewCategoryId", "/api/category", "Search for a category");
        initSelect2("#NewIngredientId", "/api/ingredient", "Search for an ingredient");
        initSelect2("#NewIngredientQuantityId", "/api/quantity", "Search for a quantity");
    });
</script>