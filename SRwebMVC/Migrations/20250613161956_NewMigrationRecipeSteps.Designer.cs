// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SRwebMVC.Data;

#nullable disable

namespace SRwebMVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250613161956_NewMigrationRecipeSteps")]
    partial class NewMigrationRecipeSteps
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SRwebMVC.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lunch"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Side"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dinner"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Beef"
                        },
                        new
                        {
                            Id = 5,
                            Name = "No Cook"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Stove Top"
                        },
                        new
                        {
                            Id = 7,
                            Name = "One Pot"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Oven"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Cast Iron"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Barbeque"
                        });
                });

            modelBuilder.Entity("SRwebMVC.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bread"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ham"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Rice"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Water"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Salt"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Steak"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Pepper"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Oil"
                        });
                });

            modelBuilder.Entity("SRwebMVC.Models.Quantity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Quantities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Slices"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Grams"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cups"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tablespoons"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Teaspoons"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Pieces"
                        });
                });

            modelBuilder.Entity("SRwebMVC.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CookTime")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PrepTime")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CookTime = 3,
                            Name = "Ham and Cheese Sandwich",
                            PrepTime = 5
                        },
                        new
                        {
                            Id = 2,
                            CookTime = 20,
                            Name = "Stovetop Rice",
                            PrepTime = 2
                        },
                        new
                        {
                            Id = 3,
                            CookTime = 40,
                            Name = "Forward Sear Steak",
                            PrepTime = 10
                        });
                });

            modelBuilder.Entity("SRwebMVC.Models.RecipeCategory", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.HasKey("RecipeId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("RecipeCategories");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            RecipeId = 1,
                            CategoryId = 5
                        },
                        new
                        {
                            RecipeId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            RecipeId = 2,
                            CategoryId = 6
                        },
                        new
                        {
                            RecipeId = 2,
                            CategoryId = 7
                        },
                        new
                        {
                            RecipeId = 3,
                            CategoryId = 3
                        },
                        new
                        {
                            RecipeId = 3,
                            CategoryId = 4
                        },
                        new
                        {
                            RecipeId = 3,
                            CategoryId = 8
                        },
                        new
                        {
                            RecipeId = 3,
                            CategoryId = 9
                        },
                        new
                        {
                            RecipeId = 3,
                            CategoryId = 10
                        });
                });

            modelBuilder.Entity("SRwebMVC.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<int>("IngredientId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("QuantityId")
                        .HasColumnType("integer");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("QuantityId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 1,
                            Amount = 2.0m,
                            QuantityId = 1
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 2,
                            Amount = 50.0m,
                            QuantityId = 2
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 3,
                            Amount = 30.0m,
                            QuantityId = 2
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 4,
                            Amount = 1.0m,
                            QuantityId = 3
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 5,
                            Amount = 2.0m,
                            QuantityId = 3
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 6,
                            Amount = 0.5m,
                            QuantityId = 5
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 7,
                            Amount = 1.0m,
                            QuantityId = 6
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 6,
                            Amount = 0.5m,
                            QuantityId = 5
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 8,
                            Amount = 0.25m,
                            QuantityId = 5
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 9,
                            Amount = 1.0m,
                            QuantityId = 4
                        });
                });

            modelBuilder.Entity("SRwebMVC.Models.RecipeStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<int>("StepNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeSteps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lay out two slices of bread.",
                            RecipeId = 1,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Place ham on one slice of bread.",
                            RecipeId = 1,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Add cheese on top of the ham.",
                            RecipeId = 1,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Top with the second slice of bread.",
                            RecipeId = 1,
                            StepNumber = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Toast the sandwich if desired.",
                            RecipeId = 1,
                            StepNumber = 5
                        },
                        new
                        {
                            Id = 6,
                            Description = "Rinse the rice under cold water.",
                            RecipeId = 2,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 7,
                            Description = "Add rice, water, and salt to a pot.",
                            RecipeId = 2,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "Bring to a boil over high heat.",
                            RecipeId = 2,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 9,
                            Description = "Reduce heat to low, cover, and simmer until water is absorbed.",
                            RecipeId = 2,
                            StepNumber = 4
                        },
                        new
                        {
                            Id = 10,
                            Description = "Remove from heat and let stand covered for 5 minutes before serving.",
                            RecipeId = 2,
                            StepNumber = 5
                        },
                        new
                        {
                            Id = 11,
                            Description = "Preheat oven to 250°F (120°C).",
                            RecipeId = 3,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 12,
                            Description = "Season steak with salt and pepper.",
                            RecipeId = 3,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 13,
                            Description = "Place steak on a wire rack over a baking sheet.",
                            RecipeId = 3,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 14,
                            Description = "Roast in oven until desired internal temperature is reached.",
                            RecipeId = 3,
                            StepNumber = 4
                        },
                        new
                        {
                            Id = 15,
                            Description = "Heat oil in a cast iron skillet over high heat.",
                            RecipeId = 3,
                            StepNumber = 5
                        },
                        new
                        {
                            Id = 16,
                            Description = "Sear steak on both sides until a brown crust forms.",
                            RecipeId = 3,
                            StepNumber = 6
                        },
                        new
                        {
                            Id = 17,
                            Description = "Rest steak for 5 minutes before slicing and serving.",
                            RecipeId = 3,
                            StepNumber = 7
                        });
                });

            modelBuilder.Entity("SRwebMVC.Models.RecipeCategory", b =>
                {
                    b.HasOne("SRwebMVC.Models.Category", "Category")
                        .WithMany("RecipeCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SRwebMVC.Models.Recipe", "Recipe")
                        .WithMany("RecipeCategories")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("SRwebMVC.Models.RecipeIngredient", b =>
                {
                    b.HasOne("SRwebMVC.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SRwebMVC.Models.Quantity", "Quantity")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("QuantityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SRwebMVC.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Quantity");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("SRwebMVC.Models.RecipeStep", b =>
                {
                    b.HasOne("SRwebMVC.Models.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("SRwebMVC.Models.Category", b =>
                {
                    b.Navigation("RecipeCategories");
                });

            modelBuilder.Entity("SRwebMVC.Models.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("SRwebMVC.Models.Quantity", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("SRwebMVC.Models.Recipe", b =>
                {
                    b.Navigation("RecipeCategories");

                    b.Navigation("RecipeIngredients");

                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
